// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  nickname   String      @unique
  grade      UserGrade
  soundFiles SoundFile[]
  StsJob     StsJob[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  deletedAt  DateTime?

}

enum UserGrade {
  FREE
  PREMIUM
}

model SoundFile {
  id          Int       @id @default(autoincrement())
  fileName    String
  fileSize    Int
  duration    Int
  filePath    String
  previewLink String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  StsJob      StsJob[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model Voice {
  id          Int       @id @default(autoincrement())
  name        String
  explanation String
  link        String
  StsJob      StsJob[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model StsJob {
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  soundFile   SoundFile    @relation(fields: [soundFileId], references: [id])
  soundFileId Int
  voice       Voice        @relation(fields: [voiceId], references: [id])
  voiceId     Int
  status      StsJobStatus
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  deletedAt   DateTime?
  resultFilePath  String
  resultFileSize  Int
  resultFileDuration  Int
  resultFilePreviewLink  String 

  @@id([soundFileId, voiceId])
}

enum StsJobStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
}
